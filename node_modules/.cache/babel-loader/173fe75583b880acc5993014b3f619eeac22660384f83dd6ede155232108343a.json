{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var counterSlice=createSlice({name:'counter',initialState:{value:0},reducers:{increment:function increment(state){// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\nstate.value+=1;},decrement:function decrement(state){state.value-=1;},incrementByAmount:function incrementByAmount(state,action){state.value+=action.payload;}}});// Action creators are generated for each case reducer function\nvar _counterSlice$actions=counterSlice.actions,increment=_counterSlice$actions.increment,decrement=_counterSlice$actions.decrement,incrementByAmount=_counterSlice$actions.incrementByAmount;export{increment,decrement,incrementByAmount};export default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","_counterSlice$actions","actions","reducer"],"sources":["/Applications/MAMP/htdocs/reactjs3/src/features/counter/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0\n  },\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1\n    },\n    decrement: state => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\nexport default counterSlice.reducer"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,MAAO,IAAM,CAAAC,YAAY,CAAGD,WAAW,CAAC,CACtCE,IAAI,CAAE,SAAS,CACfC,YAAY,CAAE,CACZC,KAAK,CAAE,CACT,CAAC,CACDC,QAAQ,CAAE,CACRC,SAAS,CAAE,SAAAA,UAAAC,KAAK,CAAI,CAClB;AACA;AACA;AACA;AACAA,KAAK,CAACH,KAAK,EAAI,CAAC,CAClB,CAAC,CACDI,SAAS,CAAE,SAAAA,UAAAD,KAAK,CAAI,CAClBA,KAAK,CAACH,KAAK,EAAI,CAAC,CAClB,CAAC,CACDK,iBAAiB,CAAE,SAAAA,kBAACF,KAAK,CAAEG,MAAM,CAAK,CACpCH,KAAK,CAACH,KAAK,EAAIM,MAAM,CAACC,OAAO,CAC/B,CACF,CACF,CAAC,CAAC,CAEF;AACO,IAAAC,qBAAA,CAAoDX,YAAY,CAACY,OAAO,CAAhEP,SAAS,CAAAM,qBAAA,CAATN,SAAS,CAAEE,SAAS,CAAAI,qBAAA,CAATJ,SAAS,CAAEC,iBAAiB,CAAAG,qBAAA,CAAjBH,iBAAiB,CAAyB,OAAAH,SAAA,CAAAE,SAAA,CAAAC,iBAAA,EAE/E,cAAe,CAAAR,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}